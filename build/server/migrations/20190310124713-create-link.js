'use strict';

module.exports = {
  up: function up(queryInterface, Sequelize) {
    return queryInterface.createTable('links', {
      id: {
        allowNull: false,
        autoIncrement: true,
        primaryKey: true,
        type: Sequelize.INTEGER
      },
      title: {
        type: Sequelize.STRING,
        allowNull: false
      },
      link: {
        type: Sequelize.STRING,
        allowNull: false
      },
      tag: {
        type: Sequelize.STRING,
        allowNull: false
      },
      createdAt: {
        allowNull: false,
        type: Sequelize.DATE
      },
      updatedAt: {
        allowNull: false,
        type: Sequelize.DATE
      },
      userId: {
        type: Sequelize.INTEGER,
        onDelete: 'CASCADE',
        references: {
          model: 'users',
          key: 'id',
          as: 'userId'
        }
      }
    });
  },
  down: function down(queryInterface, Sequelize) {
    return queryInterface.dropTable('links');
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NlcnZlci9taWdyYXRpb25zLzIwMTkwMzEwMTI0NzEzLWNyZWF0ZS1saW5rLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJ1cCIsInF1ZXJ5SW50ZXJmYWNlIiwiU2VxdWVsaXplIiwiY3JlYXRlVGFibGUiLCJpZCIsImFsbG93TnVsbCIsImF1dG9JbmNyZW1lbnQiLCJwcmltYXJ5S2V5IiwidHlwZSIsIklOVEVHRVIiLCJ0aXRsZSIsIlNUUklORyIsImxpbmsiLCJ0YWciLCJjcmVhdGVkQXQiLCJEQVRFIiwidXBkYXRlZEF0IiwidXNlcklkIiwib25EZWxldGUiLCJyZWZlcmVuY2VzIiwibW9kZWwiLCJrZXkiLCJhcyIsImRvd24iLCJkcm9wVGFibGUiXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBQSxPQUFPQyxPQUFQLEdBQWlCO0FBQ2ZDLE1BQUksWUFBQ0MsY0FBRCxFQUFpQkMsU0FBakIsRUFBK0I7QUFDakMsV0FBT0QsZUFBZUUsV0FBZixDQUEyQixPQUEzQixFQUFvQztBQUN6Q0MsVUFBSTtBQUNGQyxtQkFBVyxLQURUO0FBRUZDLHVCQUFlLElBRmI7QUFHRkMsb0JBQVksSUFIVjtBQUlGQyxjQUFNTixVQUFVTztBQUpkLE9BRHFDO0FBT3pDQyxhQUFPO0FBQ0xGLGNBQU1OLFVBQVVTLE1BRFg7QUFFTE4sbUJBQVc7QUFGTixPQVBrQztBQVd6Q08sWUFBTTtBQUNKSixjQUFNTixVQUFVUyxNQURaO0FBRUpOLG1CQUFXO0FBRlAsT0FYbUM7QUFlekNRLFdBQUk7QUFDRkwsY0FBTU4sVUFBVVMsTUFEZDtBQUVGTixtQkFBVztBQUZULE9BZnFDO0FBbUJ6Q1MsaUJBQVc7QUFDVFQsbUJBQVcsS0FERjtBQUVURyxjQUFNTixVQUFVYTtBQUZQLE9BbkI4QjtBQXVCekNDLGlCQUFXO0FBQ1RYLG1CQUFXLEtBREY7QUFFVEcsY0FBTU4sVUFBVWE7QUFGUCxPQXZCOEI7QUEyQnpDRSxjQUFRO0FBQ05ULGNBQU1OLFVBQVVPLE9BRFY7QUFFTlMsa0JBQVUsU0FGSjtBQUdOQyxvQkFBWTtBQUNWQyxpQkFBTyxPQURHO0FBRVZDLGVBQUssSUFGSztBQUdWQyxjQUFJO0FBSE07QUFITjtBQTNCaUMsS0FBcEMsQ0FBUDtBQXFDRCxHQXZDYztBQXdDZkMsUUFBTSxjQUFDdEIsY0FBRCxFQUFpQkMsU0FBakIsRUFBK0I7QUFDbkMsV0FBT0QsZUFBZXVCLFNBQWYsQ0FBeUIsT0FBekIsQ0FBUDtBQUNEO0FBMUNjLENBQWpCIiwiZmlsZSI6IjIwMTkwMzEwMTI0NzEzLWNyZWF0ZS1saW5rLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHVwOiAocXVlcnlJbnRlcmZhY2UsIFNlcXVlbGl6ZSkgPT4ge1xuICAgIHJldHVybiBxdWVyeUludGVyZmFjZS5jcmVhdGVUYWJsZSgnbGlua3MnLCB7XG4gICAgICBpZDoge1xuICAgICAgICBhbGxvd051bGw6IGZhbHNlLFxuICAgICAgICBhdXRvSW5jcmVtZW50OiB0cnVlLFxuICAgICAgICBwcmltYXJ5S2V5OiB0cnVlLFxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUlxuICAgICAgfSxcbiAgICAgIHRpdGxlOiB7XG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5TVFJJTkcsXG4gICAgICAgIGFsbG93TnVsbDogZmFsc2VcbiAgICAgIH0sXG4gICAgICBsaW5rOiB7XG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5TVFJJTkcsXG4gICAgICAgIGFsbG93TnVsbDogZmFsc2VcbiAgICAgIH0sXG4gICAgICB0YWc6e1xuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuU1RSSU5HLFxuICAgICAgICBhbGxvd051bGw6IGZhbHNlXG4gICAgICB9LFxuICAgICAgY3JlYXRlZEF0OiB7XG4gICAgICAgIGFsbG93TnVsbDogZmFsc2UsXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5EQVRFXG4gICAgICB9LFxuICAgICAgdXBkYXRlZEF0OiB7XG4gICAgICAgIGFsbG93TnVsbDogZmFsc2UsXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5EQVRFXG4gICAgICB9LFxuICAgICAgdXNlcklkOiB7XG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSLFxuICAgICAgICBvbkRlbGV0ZTogJ0NBU0NBREUnLFxuICAgICAgICByZWZlcmVuY2VzOiB7XG4gICAgICAgICAgbW9kZWw6ICd1c2VycycsXG4gICAgICAgICAga2V5OiAnaWQnLFxuICAgICAgICAgIGFzOiAndXNlcklkJyxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgfSk7XG4gIH0sXG4gIGRvd246IChxdWVyeUludGVyZmFjZSwgU2VxdWVsaXplKSA9PiB7XG4gICAgcmV0dXJuIHF1ZXJ5SW50ZXJmYWNlLmRyb3BUYWJsZSgnbGlua3MnKTtcbiAgfVxufTsiXX0=