'use strict';

module.exports = {
  up: function up(queryInterface, Sequelize) {
    return queryInterface.createTable('Links', {
      id: {
        allowNull: false,
        autoIncrement: true,
        primaryKey: true,
        type: Sequelize.INTEGER
      },
      title: {
        type: Sequelize.STRING,
        allowNull: false
      },
      link: {
        type: Sequelize.STRING,
        allowNull: false
      },
      tag: {
        type: Sequelize.STRING,
        allowNull: false
      },
      createdAt: {
        allowNull: false,
        type: Sequelize.DATE
      },
      updatedAt: {
        allowNull: false,
        type: Sequelize.DATE
      },
      userId: {
        type: Sequelize.INTEGER,
        onDelete: 'CASCADE',
        references: {
          model: 'users',
          key: 'id',
          as: 'userId'
        }
      }
    });
  },
  down: function down(queryInterface, Sequelize) {
    return queryInterface.dropTable('Links');
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NlcnZlci9taWdyYXRpb25zL2xpbmtNaWdyYXRlLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJ1cCIsInF1ZXJ5SW50ZXJmYWNlIiwiU2VxdWVsaXplIiwiY3JlYXRlVGFibGUiLCJpZCIsImFsbG93TnVsbCIsImF1dG9JbmNyZW1lbnQiLCJwcmltYXJ5S2V5IiwidHlwZSIsIklOVEVHRVIiLCJ0aXRsZSIsIlNUUklORyIsImxpbmsiLCJ0YWciLCJjcmVhdGVkQXQiLCJEQVRFIiwidXBkYXRlZEF0IiwidXNlcklkIiwib25EZWxldGUiLCJyZWZlcmVuY2VzIiwibW9kZWwiLCJrZXkiLCJhcyIsImRvd24iLCJkcm9wVGFibGUiXSwibWFwcGluZ3MiOiI7O0FBQUFBLE9BQU9DLE9BQVAsR0FBaUI7QUFDZkMsTUFBSSxZQUFDQyxjQUFELEVBQWlCQyxTQUFqQixFQUErQjtBQUNqQyxXQUFPRCxlQUFlRSxXQUFmLENBQTJCLE9BQTNCLEVBQW9DO0FBQ3pDQyxVQUFJO0FBQ0ZDLG1CQUFXLEtBRFQ7QUFFRkMsdUJBQWUsSUFGYjtBQUdGQyxvQkFBWSxJQUhWO0FBSUZDLGNBQU1OLFVBQVVPO0FBSmQsT0FEcUM7QUFPekNDLGFBQU87QUFDTEYsY0FBTU4sVUFBVVMsTUFEWDtBQUVMTixtQkFBVztBQUZOLE9BUGtDO0FBV3pDTyxZQUFNO0FBQ0pKLGNBQU1OLFVBQVVTLE1BRFo7QUFFSk4sbUJBQVc7QUFGUCxPQVhtQztBQWV6Q1EsV0FBSTtBQUNGTCxjQUFNTixVQUFVUyxNQURkO0FBRUZOLG1CQUFXO0FBRlQsT0FmcUM7QUFtQnpDUyxpQkFBVztBQUNUVCxtQkFBVyxLQURGO0FBRVRHLGNBQU1OLFVBQVVhO0FBRlAsT0FuQjhCO0FBdUJ6Q0MsaUJBQVc7QUFDVFgsbUJBQVcsS0FERjtBQUVURyxjQUFNTixVQUFVYTtBQUZQLE9BdkI4QjtBQTJCekNFLGNBQVE7QUFDTlQsY0FBTU4sVUFBVU8sT0FEVjtBQUVOUyxrQkFBVSxTQUZKO0FBR05DLG9CQUFZO0FBQ1ZDLGlCQUFPLE9BREc7QUFFVkMsZUFBSyxJQUZLO0FBR1ZDLGNBQUk7QUFITTtBQUhOO0FBM0JpQyxLQUFwQyxDQUFQO0FBcUNELEdBdkNjO0FBd0NmQyxRQUFNLGNBQUN0QixjQUFELEVBQWlCQyxTQUFqQixFQUErQjtBQUNuQyxXQUFPRCxlQUFldUIsU0FBZixDQUF5QixPQUF6QixDQUFQO0FBQ0Q7QUExQ2MsQ0FBakIiLCJmaWxlIjoibGlua01pZ3JhdGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgdXA6IChxdWVyeUludGVyZmFjZSwgU2VxdWVsaXplKSA9PiB7XG4gICAgcmV0dXJuIHF1ZXJ5SW50ZXJmYWNlLmNyZWF0ZVRhYmxlKCdMaW5rcycsIHtcbiAgICAgIGlkOiB7XG4gICAgICAgIGFsbG93TnVsbDogZmFsc2UsXG4gICAgICAgIGF1dG9JbmNyZW1lbnQ6IHRydWUsXG4gICAgICAgIHByaW1hcnlLZXk6IHRydWUsXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSXG4gICAgICB9LFxuICAgICAgdGl0bGU6IHtcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLlNUUklORyxcbiAgICAgICAgYWxsb3dOdWxsOiBmYWxzZVxuICAgICAgfSxcbiAgICAgIGxpbms6IHtcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLlNUUklORyxcbiAgICAgICAgYWxsb3dOdWxsOiBmYWxzZVxuICAgICAgfSxcbiAgICAgIHRhZzp7XG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5TVFJJTkcsXG4gICAgICAgIGFsbG93TnVsbDogZmFsc2VcbiAgICAgIH0sXG4gICAgICBjcmVhdGVkQXQ6IHtcbiAgICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLkRBVEVcbiAgICAgIH0sXG4gICAgICB1cGRhdGVkQXQ6IHtcbiAgICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLkRBVEVcbiAgICAgIH0sXG4gICAgICB1c2VySWQ6IHtcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVIsXG4gICAgICAgIG9uRGVsZXRlOiAnQ0FTQ0FERScsXG4gICAgICAgIHJlZmVyZW5jZXM6IHtcbiAgICAgICAgICBtb2RlbDogJ3VzZXJzJyxcbiAgICAgICAgICBrZXk6ICdpZCcsXG4gICAgICAgICAgYXM6ICd1c2VySWQnLFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICB9KTtcbiAgfSxcbiAgZG93bjogKHF1ZXJ5SW50ZXJmYWNlLCBTZXF1ZWxpemUpID0+IHtcbiAgICByZXR1cm4gcXVlcnlJbnRlcmZhY2UuZHJvcFRhYmxlKCdMaW5rcycpO1xuICB9XG59OyJdfQ==